# Étape 1 : Builder l'application
FROM node:{{ node_version | default("20-alpine") }} AS builder

WORKDIR /app

# Installer git et cloner le dépôt
RUN apk add --no-cache git
RUN git clone --depth=1 {{ repo_url }} .

# Installer les dépendances
RUN yarn install --frozen-lockfile

# Variable d'argument pour choisir le mode build (default SSR)
ARG BUILD_MODE=ssr

# Build conditionnel : statique ou SSR
RUN if [ "$BUILD_MODE" = "static" ]; then \
      yarn generate; \
    else \
      yarn build; \
    fi

# Étape 2 : Image de production minimale pour SSR
FROM node:{{ node_version | default("20-alpine") }} AS runner

ENV NODE_ENV=production

WORKDIR /app

# Copier uniquement ce qui est nécessaire pour le runtime SSR
COPY --from=builder /app/nuxt.config.* ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/.output ./.output
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

EXPOSE 3000

CMD ["node", ".output/server/index.mjs"]

# Étape 3 : Image de production minimale pour site statique (Nginx)
FROM nginx:alpine AS static-runtime

COPY --from=builder /app/.output/public /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
